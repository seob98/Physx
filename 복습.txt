RigidBody
PxRigidActor
PxRigidDynamic - 중력(mass), 가속도(velocity), linear/angular damping?, kinematic? LockAxis?

[getGlobalPose(), isSleeping(), isKinematic(), AddForce(pxforcemode::enum), set Rot/Trans/Pos LockAxis]

PxRigidStatic
PxGeometryHolder

PxMaterial -> 마찰력, 반발력, 반발계수 결합모드

Collider [ friend Rigidbody, m_material, m_shape, beforeLoc, beforeRot, Quat defaultRot  ]

RigidBody [ friend Collider ]

GetRigidBody = 콜라이더가 부착하는 상대. 강체라고 칭한다.
GetGeometry = shape->getGeometry()

material -> [ friction, restitution(반발력), restitutionCombineMode(반발계수 결합 모드),]


<초기화>
errorCallback, allocator, pvd는 초반 셋팅 이후로는 볼일없다.
pxvec3, 사용자구조체 간 동기화는 알아서.
pvd의 데이터 전송간격은 따로 개시가능. 10ms로 했다고함.

physics 얘로 collider, rigidbody등 만듬
dispatcher - 	월드 상 오브젝트들의 상호작용중인 메시지를 뿌린다. defaultdispatcher로 충분!
		메시지 위치는 개인 구현 간.

정점, face등을 던져 collider를 만들고 싶을 때. Cook?같은걸 사용.

physicsDevice -> helloWorld의 초기화 변수 + cooking, scene, layerManager(px32배열로 scene모음집)

13:02